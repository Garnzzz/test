#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <115>;
    require-prior-idle-ms = <80>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <31 34>;
};

&mt {
    quick-tap-ms = <115>;
    require-prior-idle-ms = <50>;
    flavor = "balanced";
    hold-trigger-key-positions = <11 12 13 14 30 32 33 16 17 18>;
    hold-trigger-on-release;
};

/ {
    // #define BASE    0
    // #define LOWER   1
    // #define RAISE   2
    // #define MEDIA   3
    // #define CHANGE  4

    combos {
        compatible = "zmk,combos";

        LH.Lclick {
            bindings = <&mkp LCLK>;
            key-positions = <23 22>;
        };

        LH.Rclick {
            bindings = <&mkp RCLK>;
            key-positions = <22 21>;
        };

        LH.Mclick {
            bindings = <&mkp MB3>;
            key-positions = <21 22 23>;
        };

        OSM_Shift {
            bindings = <&sk LSHFT>;
            key-positions = <29 28>;
            layers = <0>;
        };

        CHG {
            bindings = <&to 4>;
            key-positions = <31 34>;
            layers = <0>;
        };

        Base {
            bindings = <&to 0>;
            key-positions = <31 34>;
            layers = <4>;
        };

        Select_All {
            bindings = <&kp LC(A)>;
            key-positions = <0 1>;
        };

        CapsL {
            bindings = <&kp CLCK>;
            key-positions = <23 31>;
            layers = <0>;
        };

        Alt_F4 {
            bindings = <&kp LA(F4)>;
            key-positions = <13 12>;
            layers = <1>;
        };

        RH.Lclick {
            bindings = <&mkp LCLK>;
            key-positions = <26 27>;
        };

        RH.Rclick {
            bindings = <&mkp RCLK>;
            key-positions = <27 28>;
        };

        RH.Mclick {
            bindings = <&mkp MCLK>;
            key-positions = <26 27 28>;
        };
    };

    behaviors {
        sf_shift: sf_shift {
            compatible = "zmk,behavior-sticky-key";
            label = "SF_SHIFT";
            bindings = <&sk>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    behaviors {
    };

    behaviors {
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q               &kp W           &kp E           &kp R             &kp T          &mt DEL Y       &kp U              &kp I            &kp O            &kp P
&mt LEFT_CONTROL A  &mt LEFT_GUI S  &mt LEFT_ALT D  &mt LEFT_SHIFT F  &kp G          &mt HOME H      &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &mt SEMI APOS
&mt LC(Z) Z         &mt LC(X) X     &mt LC(C) C     &mt LC(V) V       &kp B          &mt END N       &kp M              &kp COMMA        &kp DOT          &lt 3 SLASH
                                    &to 3           &lt 1 BACKSPACE   &mt RET TAB    &mt ESCAPE RET  &lt 2 SPACE
            >;

            label = "BASE";
        };

        LWR {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp NUMBER_4       &kp N5     &kp NUMBER_6   &kp N7             &kp N8        &kp N9  &kp N0
&mt LCTRL F1  &kp F2        &mt LEFT_ALT F3  &mt LEFT_SHIFT F4  &kp F5     &kp F6         &mt LEFT_SHIFT F7  &kp LEFT_ALT  &kp F9  &kp LS(F10)
&kp LC(Z)     &kp LC(X)     &kp LC(C)        &kp LC(V)          &kp F11    &kp F12        &kp COLON          &kp SLASH     &trans  &mt PAUSE_BREAK MINUS
                            &trans           &trans             &trans     &kp BACKSPACE  &kp RET
            >;

            label = "LOWER";
        };

        RSE {
            bindings = <
&kp EXCL   &kp AT      &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp RIGHT_PARENTHESIS   &kp PERCENT               &kp EQUAL
&kp LCTRL  &kp DOLLAR  &kp UNDER             &kp LSHFT         &kp ASTRK         &kp PAGE_UP      &mt RSHFT LEFT       &mt RIGHT_ALT UP_ARROW  &mt RIGHT_GUI DOWN_ARROW  &mt RCTRL RIGHT
&kp POUND  &kp CARET   &kp PLUS              &kp AMPS          &kp PIPE          &kp PAGE_DOWN    &kp LA(PRINTSCREEN)  &none                   &kp TILDE                 &mt PAUSE_BREAK QUESTION
                       &key_repeat           &trans            &trans            &trans           &trans
            >;

            label = "RAISE";
        };

        MED {
            bindings = <
&bt BT_SEL 0             &bt BT_SEL 1           &bt BT_SEL 2           &bt BT_SEL 3                 &bt BT_SEL 4       &ext_power EP_TOG  &out OUT_TOG    &none                  &none                    &bt BT_CLR
&mt LEFT_CONTROL C_MUTE  &mt LEFT_GUI C_VOL_DN  &mt LEFT_ALT C_VOL_UP  &mt LEFT_SHIFT C_PLAY_PAUSE  &msc MOVE_X(-5)    &msc MOVE_Y(10)    &mt LSHFT LEFT  &mt LEFT_ALT UP_ARROW  &mt LEFT_GUI DOWN_ARROW  &mt LCTRL RIGHT
&trans                   &trans                 &kp C_PREV             &kp C_NEXT                   &msc MOVE_X(5)     &msc MOVE_Y(-10)   &mkp MCLK       &mkp MB4               &mkp MB5                 &none
                                                &to 0                  &mkp LCLK                    &mkp RCLK          &mkp RCLK          &mkp LCLK
            >;

            label = "MEDIA";
        };

        CHG {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5      &kp NUMBER_6  &kp N7     &kp N8        &kp N9    &kp N0
&kp LCTRL     &kp LEFT_GUI  &kp LEFT_ALT  &kp LSHFT     &kp HOME    &kp DEL       &kp LEFT   &kp UP_ARROW  &kp DOWN  &kp RIGHT
&kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp END     &none         &kp COLON  &kp MINUS     &trans    &none
                            &kp ESCAPE    &trans        &trans      &trans        &trans
            >;

            label = "CHANGE";
        };
    };
};
